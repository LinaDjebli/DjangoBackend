# Generated by Django 5.0.6 on 2024-07-12 01:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Users', '0013_price'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('activity_name', models.CharField(max_length=255)),
                ('guide_name', models.CharField(max_length=255)),
                ('guide_phone', models.CharField(max_length=20)),
                ('activity_type', models.CharField(max_length=255)),
                ('activity_description', models.TextField()),
                ('activity_location', models.URLField()),
                ('emergency_phone_number', models.CharField(max_length=20)),
                ('cut_off_time', models.CharField(max_length=20)),
                ('meeting_point', models.URLField()),
                ('activity_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.activitycategory')),
                ('food', models.ManyToManyField(to='Users.food')),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='published_activities', to=settings.AUTH_USER_MODEL)),
                ('transport', models.ManyToManyField(to='Users.transport')),
            ],
        ),
        migrations.RemoveField(
            model_name='activitybase',
            name='activity_category',
        ),
        migrations.RemoveField(
            model_name='activitybase',
            name='food',
        ),
        migrations.RemoveField(
            model_name='activitybase',
            name='published_by',
        ),
        migrations.RemoveField(
            model_name='activitybase',
            name='transport',
        ),
        migrations.CreateModel(
            name='DailyActivity',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='daily_activity', serialize=False, to='Users.activity')),
                ('activity_date', models.DateField(blank=True, null=True)),
                ('start_hour', models.TimeField(blank=True, null=True)),
                ('end_hour', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OneDayActivity',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='one_day_activity', serialize=False, to='Users.activity')),
                ('activity_start_hour', models.TimeField()),
                ('activity_end_hour', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SpecificDurationActivity',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='specific_duration_activity', serialize=False, to='Users.activity')),
                ('start_date', models.DateField()),
                ('activity_start_hour', models.TimeField()),
                ('activity_end_date', models.DateField()),
                ('end_hour', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyActivity',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='weekly_activity', serialize=False, to='Users.activity')),
                ('day', models.CharField(max_length=255)),
                ('start_hour', models.TimeField()),
                ('end_hour', models.TimeField()),
            ],
        ),
        migrations.AlterField(
            model_name='price',
            name='activity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='Users.activity'),
        ),
        migrations.CreateModel(
            name='Allowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allowed', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='Highlights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highlights', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='Includes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='includes', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='NotAllowed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='not_allowed', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='NotIncludes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='not_includes', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_path', models.ImageField(default='projectone/Users/defaults/default-avatar-icon-of-social-media-user-vector.jpg', upload_to='Activities_Photos/')),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='Users.activity')),
            ],
        ),
        migrations.CreateModel(
            name='SuitableFor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suitable_for', to='Users.activity')),
            ],
        ),
        migrations.AddConstraint(
            model_name='dailyactivity',
            constraint=models.CheckConstraint(check=models.Q(('start_hour__lt', models.F('end_hour'))), name='start_date_before_end_date'),
        ),
        migrations.AddConstraint(
            model_name='onedayactivity',
            constraint=models.CheckConstraint(check=models.Q(('activity_start_hour__lt', models.F('activity_end_hour'))), name='start_date_before_end_date_oneday'),
        ),
        migrations.AddConstraint(
            model_name='specificdurationactivity',
            constraint=models.CheckConstraint(check=models.Q(('start_date__lt', models.F('activity_end_date'))), name='start_date_before_end_date_specific'),
        ),
        migrations.AddConstraint(
            model_name='weeklyactivity',
            constraint=models.CheckConstraint(check=models.Q(('start_hour__lt', models.F('end_hour'))), name='start_date_before_end_date_weekly'),
        ),
        migrations.AddConstraint(
            model_name='activity',
            constraint=models.CheckConstraint(check=models.Q(('activity_location', models.F('meeting_point')), _negated=True), name='meeting_point_different_from_location'),
        ),
        migrations.DeleteModel(
            name='ActivityBase',
        ),
    ]
